@page "/learnBlazor/demoProduct"

<h3 class="text-primary">Demo Product</h3>
<p>Favorite Total: @SelectedFavoriteCount</p>
<p>Last Selected Item: @LastSelected</p>
<div class="row p-2 mt-2 border" style="background-color: #E1F1FF">
    @foreach (Demo_Product product in Products)
    {
        // Создаем CallBack для получения ответа на нажатие, закидываем в него метод по изменению счетчика
        <ProductComponent Product="@product" OnFavoriteUpdated="FavoriteCountUpdate" OnLastSelected="LastSelectedUpdate"></ProductComponent>
    }
</div>
    
    

@code 
{
    private int SelectedFavoriteCount { get; set; } = 0;
    private string LastSelected { get; set; }

    List<Demo_Product> Products = new();

    protected override void OnInitialized()
    {
        //base.OnInitialized();  // Перегрузка инициализации

        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 3.44,
                ProductProperties = new List<Demo_ProductProp>()
                {
                    new Demo_ProductProp { Id = 1, Key = "Flavor", Value="Rose" },
                    new Demo_ProductProp { Id = 2, Key = "Size", Value="20gr" },
                    new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" },
                }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 16.01,
                ProductProperties = new List<Demo_ProductProp>()
                {
                    new Demo_ProductProp { Id = 1, Key = "Flavor", Value="Lily" },
                    new Demo_ProductProp { Id = 2, Key = "Size", Value="18gr" },
                    new Demo_ProductProp { Id = 3, Key = "Color", Value="White" },
                }
            });
    }

    private void DeleteProduct(int id)
    {
        Products.Remove(Products[id - 1]);
        StateHasChanged();
    }

    private void FavoriteCountUpdate(bool isSelected)
    {
        if (isSelected)
        {
            SelectedFavoriteCount++;
        }
        else
        {
            SelectedFavoriteCount--;
        }
    }

    private void LastSelectedUpdate(string productName)
    {
        LastSelected = productName;
    }
}
